# Modal Dialog for Editing Student Details
bsModal("editStudentModal", "Edit Student Details", "saveChanges", size = "large",
fluidPage(
textInput("edit_rollno", "Roll Number", ""),
textInput("edit_sname", "Student Name", ""),
numericInput("edit_sem", "Semester", value = 1, min = 1, max = 8),
selectInput("edit_gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("edit_attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("edit_branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("edit_email", "Email", ""),
textInput("edit_number", "Phone Number", ""),
textAreaInput("edit_address", "Address", "")
))
)
)
# Run the app
shinyApp(ui = ui, server = server)
# Define UI for application
# Define UI for application
ui <- fluidPage(
# Include your custom stylesheet if needed
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "style.css"),
tags$style(HTML("
.home-background {
background: url('https://thumbs.dreamstime.com/z/student-management-system-inscription-page-student-management-system-inscription-page-185564938.jpg?ct=jpeg') no-repeat center center fixed;
background-size: cover;
}
.home-title {
font-size: 3em;
font-weight: bold;
margin-top: 30px;
color: #fff;
}
.home-subtitle {
font-size: 2em;
font-weight: bold;
margin-bottom: 20px;
color: #fff;
}
.home-description {
font-size: 1.5em;
margin-bottom: 40px;
color: #fff;
}
.home-container {
background-color: rgba(0, 0, 0, 0.6);
border-radius: 10px;
padding: 30px;
max-width: 800px;
margin: auto;
box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
}
"))
),
navbarPage(
theme = shinytheme("flatly"),  # Optional: Adds a Bootstrap theme
title = "Student Management System",
id = "mainNav",
tabPanel("Home",
),
tabPanel("Add Student",
fluidPage(
h1("Add Student Details", align = "center"),
textInput("rollno", "Roll Number", ""),
textInput("sname", "Student Name", ""),
numericInput("sem", "Semester", value = 1, min = 1, max = 8),
selectInput("gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("email", "Email", ""),
textInput("number", "Phone Number", ""),
textAreaInput("address", "Address", ""),
actionButton("addStudent", "Add Record")
)),
tabPanel("Department",
fluidPage(
h1("Add Department", align = "center"),
textInput("branch", "Department Name", ""),
actionButton("adddepartment", "Add Department")
)),
tabPanel("Records",
fluidPage(
h1("Records", align = "center"),
p("View and manage academic records.", align = "center"),
DTOutput("recordTable")
)),
tabPanel("Student Details",
fluidPage(
h1("Student Details", align = "center"),
DTOutput("studentTable"),
br(),
downloadButton("downloadData", "Download CSV") # Add the download button here
)),
tabPanel("Summary",
fluidPage(
h1("Summary", align = "center"),
plotOutput("summaryPlot")
)),
navbarMenu("Login/Logout",tabPanel("Login",
fluidPage(
h1("Login", align = "center"),
p("Login for students and records.", align = "center"),
textInput("username", "Username", placeholder = "Enter your username"),
passwordInput("password", "Password", placeholder = "Enter your password"),
actionButton("loginButton", "Log In"),
)),
tabPanel("Logout",
fluidPage(actionButton("logoutButton", "Logout", class = "btn btn-danger")
))),
tabPanel("Register",
fluidPage(
h1("Register", align = "center"),
p("Create a new account.", align = "center"),
textInput("new_username", "Username", placeholder = "Choose a username"),
passwordInput("email", "Email", placeholder = "Enter your email"),
passwordInput("new_password", "Password", placeholder = "Choose a password"),
actionButton("registerButton", "Register")
)),
# Modal Dialog for Editing Student Details
bsModal("editStudentModal", "Edit Student Details", "saveChanges", size = "large",
fluidPage(
textInput("edit_rollno", "Roll Number", ""),
textInput("edit_sname", "Student Name", ""),
numericInput("edit_sem", "Semester", value = 1, min = 1, max = 8),
selectInput("edit_gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("edit_attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("edit_branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("edit_email", "Email", ""),
textInput("edit_number", "Phone Number", ""),
textAreaInput("edit_address", "Address", "")
))
)
)
# Run the app
shinyApp(ui = ui, server = server)
# Define UI for application
# Define UI for application
ui <- fluidPage(
# Include your custom stylesheet if needed
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "style.css"),
tags$style(HTML("
.home-background {
background: url('https://thumbs.dreamstime.com/z/student-management-system-inscription-page-student-management-system-inscription-page-185564938.jpg?ct=jpeg') no-repeat center center fixed;
background-size: cover;
}
.home-title {
font-size: 3em;
font-weight: bold;
margin-top: 30px;
color: #fff;
}
.home-subtitle {
font-size: 2em;
font-weight: bold;
margin-bottom: 20px;
color: #fff;
}
.home-description {
font-size: 1.5em;
margin-bottom: 40px;
color: #fff;
}
.home-container {
background-color: rgba(0, 0, 0, 0.6);
border-radius: 10px;
padding: 30px;
max-width: 800px;
margin: auto;
box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
}
"))
),
navbarPage(
theme = shinytheme("flatly"),  # Optional: Adds a Bootstrap theme
title = "Student Management System",
id = "mainNav",
tabPanel("Home",
fluidPage(
)),
tabPanel("Add Student",
fluidPage(
h1("Add Student Details", align = "center"),
textInput("rollno", "Roll Number", ""),
textInput("sname", "Student Name", ""),
numericInput("sem", "Semester", value = 1, min = 1, max = 8),
selectInput("gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("email", "Email", ""),
textInput("number", "Phone Number", ""),
textAreaInput("address", "Address", ""),
actionButton("addStudent", "Add Record")
)),
tabPanel("Department",
fluidPage(
h1("Add Department", align = "center"),
textInput("branch", "Department Name", ""),
actionButton("adddepartment", "Add Department")
)),
tabPanel("Records",
fluidPage(
h1("Records", align = "center"),
p("View and manage academic records.", align = "center"),
DTOutput("recordTable")
)),
tabPanel("Student Details",
fluidPage(
h1("Student Details", align = "center"),
DTOutput("studentTable"),
br(),
downloadButton("downloadData", "Download CSV") # Add the download button here
)),
tabPanel("Summary",
fluidPage(
h1("Summary", align = "center"),
plotOutput("summaryPlot")
)),
navbarMenu("Login/Logout",tabPanel("Login",
fluidPage(
h1("Login", align = "center"),
p("Login for students and records.", align = "center"),
textInput("username", "Username", placeholder = "Enter your username"),
passwordInput("password", "Password", placeholder = "Enter your password"),
actionButton("loginButton", "Log In"),
)),
tabPanel("Logout",
fluidPage(actionButton("logoutButton", "Logout", class = "btn btn-danger")
))),
tabPanel("Register",
fluidPage(
h1("Register", align = "center"),
p("Create a new account.", align = "center"),
textInput("new_username", "Username", placeholder = "Choose a username"),
passwordInput("email", "Email", placeholder = "Enter your email"),
passwordInput("new_password", "Password", placeholder = "Choose a password"),
actionButton("registerButton", "Register")
)),
# Modal Dialog for Editing Student Details
bsModal("editStudentModal", "Edit Student Details", "saveChanges", size = "large",
fluidPage(
textInput("edit_rollno", "Roll Number", ""),
textInput("edit_sname", "Student Name", ""),
numericInput("edit_sem", "Semester", value = 1, min = 1, max = 8),
selectInput("edit_gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("edit_attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("edit_branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("edit_email", "Email", ""),
textInput("edit_number", "Phone Number", ""),
textAreaInput("edit_address", "Address", "")
))
)
)
# Run the app
shinyApp(ui = ui, server = server)
# Define UI for application
# Define UI for application
ui <- fluidPage(
# Include your custom stylesheet if needed
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "style.css"),
tags$style(HTML("
.home-background {
background: url('https://thumbs.dreamstime.com/z/student-management-system-inscription-page-student-management-system-inscription-page-185564938.jpg?ct=jpeg') no-repeat center center fixed;
background-size: cover;
}
.home-title {
font-size: 3em;
font-weight: bold;
margin-top: 30px;
color: #fff;
}
.home-subtitle {
font-size: 2em;
font-weight: bold;
margin-bottom: 20px;
color: #fff;
}
.home-description {
font-size: 1.5em;
margin-bottom: 40px;
color: #fff;
}
.home-container {
background-color: rgba(0, 0, 0, 0.6);
border-radius: 10px;
padding: 30px;
max-width: 800px;
margin: auto;
box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
}
"))
),
navbarPage(
theme = shinytheme("flatly"),  # Optional: Adds a Bootstrap theme
title = "Student Management System",
id = "mainNav",
tabPanel("Home",
div(class = "home-background",
fluidPage(
div(class = "home-container",
)
)
)),
tabPanel("Add Student",
fluidPage(
h1("Add Student Details", align = "center"),
textInput("rollno", "Roll Number", ""),
textInput("sname", "Student Name", ""),
numericInput("sem", "Semester", value = 1, min = 1, max = 8),
selectInput("gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("email", "Email", ""),
textInput("number", "Phone Number", ""),
textAreaInput("address", "Address", ""),
actionButton("addStudent", "Add Record")
)),
tabPanel("Department",
fluidPage(
h1("Add Department", align = "center"),
textInput("branch", "Department Name", ""),
actionButton("adddepartment", "Add Department")
)),
tabPanel("Records",
fluidPage(
h1("Records", align = "center"),
p("View and manage academic records.", align = "center"),
DTOutput("recordTable")
)),
tabPanel("Student Details",
fluidPage(
h1("Student Details", align = "center"),
DTOutput("studentTable"),
br(),
downloadButton("downloadData", "Download CSV") # Add the download button here
)),
tabPanel("Summary",
fluidPage(
h1("Summary", align = "center"),
plotOutput("summaryPlot")
)),
navbarMenu("Login/Logout",tabPanel("Login",
fluidPage(
h1("Login", align = "center"),
p("Login for students and records.", align = "center"),
textInput("username", "Username", placeholder = "Enter your username"),
passwordInput("password", "Password", placeholder = "Enter your password"),
actionButton("loginButton", "Log In"),
)),
tabPanel("Logout",
fluidPage(actionButton("logoutButton", "Logout", class = "btn btn-danger")
))),
tabPanel("Register",
fluidPage(
h1("Register", align = "center"),
p("Create a new account.", align = "center"),
textInput("new_username", "Username", placeholder = "Choose a username"),
passwordInput("email", "Email", placeholder = "Enter your email"),
passwordInput("new_password", "Password", placeholder = "Choose a password"),
actionButton("registerButton", "Register")
)),
# Modal Dialog for Editing Student Details
bsModal("editStudentModal", "Edit Student Details", "saveChanges", size = "large",
fluidPage(
textInput("edit_rollno", "Roll Number", ""),
textInput("edit_sname", "Student Name", ""),
numericInput("edit_sem", "Semester", value = 1, min = 1, max = 8),
selectInput("edit_gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("edit_attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("edit_branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("edit_email", "Email", ""),
textInput("edit_number", "Phone Number", ""),
textAreaInput("edit_address", "Address", "")
))
)
)
# Run the app
shinyApp(ui = ui, server = server)
# Define UI for application
# Define UI for application
ui <- fluidPage(
# Include your custom stylesheet if needed
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "style.css"),
tags$style(HTML("
.home-background {
background: url('https://thumbs.dreamstime.com/z/student-management-system-inscription-page-student-management-system-inscription-page-185564938.jpg?ct=jpeg') no-repeat center center fixed;
background-size: cover;
height: 100vh;
width: 100vw;
position: absolute;
top: 0;
left: 0;
}
.home-title {
font-size: 3em;
font-weight: bold;
margin-top: 30px;
color: #fff;
}
.home-subtitle {
font-size: 2em;
font-weight: bold;
margin-bottom: 20px;
color: #fff;
}
.home-description {
font-size: 1.5em;
margin-bottom: 40px;
color: #fff;
}
.home-container {
background-color: rgba(0, 0, 0, 0.6);
border-radius: 10px;
padding: 30px;
max-width: 800px;
margin: auto;
box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
position: relative;
top: 50%;
transform: translateY(-50%);
}
"))
),
navbarPage(
theme = shinytheme("flatly"),  # Optional: Adds a Bootstrap theme
title = "Student Management System",
id = "mainNav",
tabPanel("Home",
div(class = "home-background",
fluidPage(
div(class = "home-container",
)
)
)),
tabPanel("Add Student",
fluidPage(
h1("Add Student Details", align = "center"),
textInput("rollno", "Roll Number", ""),
textInput("sname", "Student Name", ""),
numericInput("sem", "Semester", value = 1, min = 1, max = 8),
selectInput("gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("email", "Email", ""),
textInput("number", "Phone Number", ""),
textAreaInput("address", "Address", ""),
actionButton("addStudent", "Add Record")
)),
tabPanel("Department",
fluidPage(
h1("Add Department", align = "center"),
textInput("branch", "Department Name", ""),
actionButton("adddepartment", "Add Department")
)),
tabPanel("Records",
fluidPage(
h1("Records", align = "center"),
p("View and manage academic records.", align = "center"),
DTOutput("recordTable")
)),
tabPanel("Student Details",
fluidPage(
h1("Student Details", align = "center"),
DTOutput("studentTable"),
br(),
downloadButton("downloadData", "Download CSV") # Add the download button here
)),
tabPanel("Summary",
fluidPage(
h1("Summary", align = "center"),
plotOutput("summaryPlot")
)),
navbarMenu("Login/Logout",tabPanel("Login",
fluidPage(
h1("Login", align = "center"),
p("Login for students and records.", align = "center"),
textInput("username", "Username", placeholder = "Enter your username"),
passwordInput("password", "Password", placeholder = "Enter your password"),
actionButton("loginButton", "Log In"),
)),
tabPanel("Logout",
fluidPage(actionButton("logoutButton", "Logout", class = "btn btn-danger")
))),
tabPanel("Register",
fluidPage(
h1("Register", align = "center"),
p("Create a new account.", align = "center"),
textInput("new_username", "Username", placeholder = "Choose a username"),
passwordInput("email", "Email", placeholder = "Enter your email"),
passwordInput("new_password", "Password", placeholder = "Choose a password"),
actionButton("registerButton", "Register")
)),
# Modal Dialog for Editing Student Details
bsModal("editStudentModal", "Edit Student Details", "saveChanges", size = "large",
fluidPage(
textInput("edit_rollno", "Roll Number", ""),
textInput("edit_sname", "Student Name", ""),
numericInput("edit_sem", "Semester", value = 1, min = 1, max = 8),
selectInput("edit_gender", "Select Gender", choices = c("Male", "Female", "Other")),
selectInput("edit_attendance", "Select Attendance", choices = c("60% (Pass)", "Less than 60% (Fail)")),
selectInput("edit_branch", "Select Branch", choices = c("Computer Science", "Information Science", "Electronics", "Mechanical", "Civil")),
textInput("edit_email", "Email", ""),
textInput("edit_number", "Phone Number", ""),
textAreaInput("edit_address", "Address", "")
))
)
)
# Run the app
shinyApp(ui = ui, server = server)
